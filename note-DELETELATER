import React from 'react'
import NoteInput from '../components/NoteInput'
import Notes from '../components/Notes'
import { Calendar, momentLocalizer, Views } from 'react-big-calendar';
import moment from 'moment';
import './style.css';
import 'react-big-calendar/lib/css/react-big-calendar.css';
import {fetchTrackers} from '../actions/fetchTrackers'

const localizer = momentLocalizer(moment);

class NoteContainer extends React.Component {

  constructor(props) {
      super(props);
      this.state = {
        calendar_notes: []
      }
    }

    componentDidMount() {

       let notesArray = []

      // loop through the notes and add to array
            this.props.tracker.notes.map(noteEditted => {

                let note = {
                    title: "X",
                    start: new Date(noteEditted.date),
                    end: new Date(noteEditted.date)
                }
                notesArray.push(note)
            })
            // after the looping is done, then just set the calendar array to the new one
            this.setState({
              calendar_notes: notesArray
             })
      }

      BigCalendar = () => (
        <div style={{height: '500px'}}>
         <Calendar
           selectable
           localizer={localizer}
           events={this.state.calendar_notes}
           defaultDate={moment().toDate()}
          />
        </div>
   )


  render() {
    return (
      <div>
        <NoteInput tracker={this.props.tracker}/> <br/>
        <Notes notes={this.props.tracker && this.props.tracker.notes}/>
        <div className = "app-side-bar">
          { this.state.calendar_notes ?
          <this.BigCalendar />
         : null
        }
        </div>
      </div>
    )
  }


}

export default NoteContainer



This is note container with breakage issue













----------------------

import React from 'react'
import {connect} from 'react-redux'
import {deleteNote} from '../actions/deleteNote'
//import {updateCal} from '../actions/updateCal'

import { Calendar, momentLocalizer, Views } from 'react-big-calendar';
import moment from 'moment';
import moment_timezone from 'moment-timezone';
import 'react-big-calendar/lib/css/react-big-calendar.css';


// const localizer = momentLocalizer(moment_timezone.tz.setDefault('Asia/Yerevan'));
const localizer = momentLocalizer(moment)

const Notes = (props) => {

  console.log("this is props in Notes.js", props)

  const handleDelete = (note) => {
    props.deleteNote(note.id, note.tracker_id)
  }

  // const handleEdit = (note) => {
  //   props.editNote(note.id, note.tracker_id)
  // }

    const updateEvents = (notesC) => {
      console.log(notesC)
      let notesArray = []
      notesC.map(noteEditted => {


        let note = {
            title: "X",
            start: noteEditted.date,
            end: noteEditted.date
          }
          notesArray.push(note)
        })
        console.log("This is notesArray", notesArray)
        return notesArray
      }

  return (
    <div className="Notes">
      {props.notes && props.notes.map(note =>
        <li key={note.id}>{note.content} - {note.date} <button className="Button" onClick={() => handleDelete(note)}>Delete</button></li>
      )}
      <br/>

      <div className="app-side-bar">
        <Calendar
          selectable
          localizer={localizer}
          events={updateEvents(props.notes)}
          defaultDate={moment().toDate()}
         />
      </div>
    </div>

  )

}

//equal to fxn argument of redux store - that is the state
//
const mapStateToProps = state => {
  return {
    notes: state.notes
  }
}



export default connect(mapStateToProps,{deleteNote})(Notes)
// export default connect(null,{deleteNote, editNote})(Notes)





<Route path='/trackers' render={(routerProps)=> <Trackers {...routerProps} trackers={this.props.trackers}/>} />


This is from about.js
<center><strong><p>Let's build better habits together!</p></strong></center>
<div className="ui blue segment" style={ {marginTop: '25px', marginLeft: '15px', marginRight: '15px'} }>
<center><Link to="/about">About</Link> | <Link to="/trackers">All Trackers</Link> | <Link to="/trackers/new">New Tracker</Link></center>
</div>









// This works to show the payload name
// const PopularTracker = ({ mostPopularTracker, tracker }) => {
//   const popularTracker = () => {
//     const showBestTracker = mostPopularTracker(tracker)
//     return showBestTracker
//     console.log("This is the bestTracker", showBestTracker)
//
//   }
//   return(
//     <div className="Tracker">
//       <button className="Button" onClick={popularTracker}> See Your Most Successful Tracker </button>
//     </div>
//   )
// }
//
// export default connect(null,{mostPopularTracker})(PopularTracker)





//
// class Show extends React.Component {
//
// let x = props && props.most_pop;
// return x
//
//   render(){
//     return(
//       <div> Hi
//
//       </div>
//     )
//   }
//
// }






//
// if/else
//
// if props.state.most_pop
//   <p>{props.state.most_pop}</>
